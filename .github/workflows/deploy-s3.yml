name: ci

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - uses: actions/checkout@v3

      - name: Rodando unit tests
        run: |  
          npm i
          npm run test

  sonar-scanner:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependÃªncias
        run: | 
            cd .github/workflows/sonar-linter
            npm i
            npm run build

      - name: Executar Linter e Quality Gate
        uses: ./.github/workflows/sonar-linter
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-organization: ${{ secrets.SONAR_ORGANIZATION }}
          sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

  generate:
    runs-on: ubuntu-latest
    needs: sonar-scanner
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - uses: actions/checkout@v3

      - name: Gerando o codigo
        run: |
          npm i
          npm run generate

      - name: Upload de artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuxt-build
          path: dist/

  release:
    needs: generate
    runs-on: ubuntu-latest
    steps:
      - name: Baixar o artefato
        uses: actions/download-artifact@v4
        with:
          name: nuxt-build
          path: dist/

      - name: Criar Release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.${{ github.run_number }}
          name: "Release v1.${{ github.run_number }}"
          body: "New Version."
          draft: false
          prerelease: false
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  deploy:
    needs: release
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Baixar o artefato
        uses: actions/download-artifact@v4
        with:
          name: nuxt-build
          path: dist/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Copy files to the S3 website content bucket
        run: aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --acl public-read